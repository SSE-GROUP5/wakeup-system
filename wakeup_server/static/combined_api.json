{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Matter API Documentation",
        "description": "API endpoints for multiple services"
    },
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/base/{id}": {
            "get": {
                "summary": "Get Base object by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base object found",
                        "schema": {
                            "$ref": "#/definitions/BaseObject"
                        }
                    },
                    "404": {
                        "description": "Base object not found"
                    }
                },
                "tags": [
                    "Base API Documentation"
                ]
            }
        },
        "/media_player/{id}/media_pause": {
            "post": {
                "summary": "Pause media playback",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media paused successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/media_player/{id}/media_play": {
            "post": {
                "summary": "Resume media playback",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media playback resumed successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/media_player/{id}/media_play_pause": {
            "post": {
                "summary": "Toggle media playback (play/pause)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media playback toggled successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/media_player/{id}/media_previous_track": {
            "post": {
                "summary": "Play the previous track",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Previous track played successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/media_player/{id}/media_next_track": {
            "post": {
                "summary": "Play the next track",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Next track played successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/media_player/{id}/volume_up": {
            "post": {
                "summary": "Increase the volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Volume increased successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/media_player/{id}/volume_down": {
            "post": {
                "summary": "Decrease the volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Volume decreased successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/media_player/{id}/volume_mute": {
            "post": {
                "summary": "Toggle volume mute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Volume mute toggled successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/media_player/{id}/volume_set": {
            "post": {
                "summary": "Set the volume level",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Data to set the volume level",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "volume_level": {
                                    "type": "number",
                                    "description": "The volume level to set (between 0 and 1)"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Volume level set successfully"
                    }
                },
                "tags": [
                    "Media Player API Documentation"
                ]
            }
        },
        "/signals": {
            "post": {
                "summary": "Receive a signal to perform an action on a target device",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Signal data containing the interactive device ID and action",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The ID of the interactive device"
                                },
                                "action": {
                                    "type": "string",
                                    "description": "The action to be performed"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The signal was successfully received and processed"
                    },
                    "400": {
                        "description": "Bad request, missing parameters, or invalid data provided"
                    }
                },
                "tags": [
                    "Signals API Documentation"
                ]
            }
        },
        "/signals/set": {
            "post": {
                "summary": "Set a signal action for an interactive device",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Data to set a signal action",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "interactive_device_id": {
                                    "type": "string",
                                    "description": "The ID of the interactive device"
                                },
                                "interactive_device_action": {
                                    "type": "string",
                                    "description": "The action name for the interactive device"
                                },
                                "target_device_id": {
                                    "type": "string",
                                    "description": "The ID of the target device"
                                },
                                "target_action": {
                                    "type": "string",
                                    "description": "The action to be performed on the target device"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The signal action was successfully set"
                    },
                    "400": {
                        "description": "Bad request, missing parameters, or invalid data provided"
                    }
                },
                "tags": [
                    "Signals API Documentation"
                ]
            }
        },
        "/target_devices": {
            "post": {
                "summary": "Create a new target device",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Data to create a target device",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TargetDevice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device created successfully"
                    },
                    "400": {
                        "description": "Bad request, missing parameters, device already exists, or other errors"
                    }
                },
                "tags": [
                    "Target Devices API Documentation"
                ]
            },
            "get": {
                "summary": "Get a list of all target devices",
                "responses": {
                    "200": {
                        "description": "A list of target devices",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TargetDevice"
                            }
                        }
                    }
                },
                "tags": [
                    "Target Devices API Documentation"
                ]
            }
        },
        "/target_devices/{matter_id}": {
            "get": {
                "summary": "Get a single target device by Matter ID",
                "parameters": [
                    {
                        "name": "matter_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Target device found",
                        "schema": {
                            "$ref": "#/definitions/TargetDevice"
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "tags": [
                    "Target Devices API Documentation"
                ]
            }
        },
        "/interactive_devices": {
            "post": {
                "summary": "Create a new interactive device",
                "description": "Adds a new interactive device to the system.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Interactive Device object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InteractiveDevice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Device created successfully"
                    },
                    "400": {
                        "description": "Invalid input or device already exists"
                    }
                },
                "tags": [
                    "Interactive Devices API Documentation"
                ]
            },
            "get": {
                "summary": "List all interactive devices",
                "description": "Retrieves a list of all interactive devices.",
                "responses": {
                    "200": {
                        "description": "A list of devices",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InteractiveDevice"
                            }
                        }
                    }
                },
                "tags": [
                    "Interactive Devices API Documentation"
                ]
            }
        },
        "/interactive_devices/{id}": {
            "get": {
                "summary": "Get a single interactive device",
                "description": "Retrieves information about a specific interactive device.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "ID of the device to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device found",
                        "schema": {
                            "$ref": "#/definitions/InteractiveDevice"
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "tags": [
                    "Interactive Devices API Documentation"
                ]
            },
            "put": {
                "summary": "Update a specific interactive device",
                "description": "Updates the details of a specific interactive device.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Interactive device details to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InteractiveDevice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interactive device updated"
                    },
                    "404": {
                        "description": "Interactive device not found"
                    }
                },
                "tags": [
                    "Interactive Devices API Documentation"
                ]
            },
            "delete": {
                "summary": "Delete a specific interactive device",
                "description": "Deletes a specific interactive device.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interactive device deleted"
                    },
                    "404": {
                        "description": "Interactive device not found"
                    }
                },
                "tags": [
                    "Interactive Devices API Documentation"
                ]
            }
        },
        "/switch/{id}/turn_on": {
            "post": {
                "summary": "Turn on the switch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "ID of the switch to be turned on"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Switch turned on"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Switch not found"
                    }
                },
                "tags": [
                    "Switch API Documentation"
                ]
            }
        },
        "/switch/{id}/turn_off": {
            "post": {
                "summary": "Turn off the switch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "ID of the switch to be turned off"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Switch turned off"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Switch not found"
                    }
                },
                "tags": [
                    "Switch API Documentation"
                ]
            }
        },
        "/switch/{id}/toggle": {
            "post": {
                "summary": "Toggle the switch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "ID of the switch to be toggled"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Switch toggled"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Switch not found"
                    }
                },
                "tags": [
                    "Switch API Documentation"
                ]
            }
        },
        "/health_check": {
            "get": {
                "summary": "Health Check",
                "description": "Checks if the API is running.",
                "responses": {
                    "200": {
                        "description": "Success, API is running."
                    },
                    "default": {
                        "description": "An error occurred."
                    }
                },
                "tags": [
                    "Home Assistant API Documentation"
                ]
            }
        },
        "/set_state": {
            "post": {
                "summary": "Set Entity State",
                "description": "Sets the state for a given entity.",
                "parameters": [
                    {
                        "name": "entity_id",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Additional data for setting the state",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "State set successfully."
                    },
                    "400": {
                        "description": "Invalid input."
                    }
                },
                "tags": [
                    "Home Assistant API Documentation"
                ]
            }
        },
        "/get_states": {
            "get": {
                "summary": "Get All States",
                "description": "Retrieves the states of all entities.",
                "responses": {
                    "200": {
                        "description": "A list of all entity states."
                    }
                },
                "tags": [
                    "Home Assistant API Documentation"
                ]
            }
        },
        "/find_switches": {
            "get": {
                "summary": "Find all switches",
                "description": "Retrieves a list of all switch entities.",
                "responses": {
                    "200": {
                        "description": "A list of switch entities."
                    }
                },
                "tags": [
                    "Home Assistant API Documentation"
                ]
            }
        },
        "/find_media_players": {
            "get": {
                "summary": "Find all media players",
                "description": "Retrieves a list of all media player entities.",
                "responses": {
                    "200": {
                        "description": "A list of media player entities."
                    }
                },
                "tags": [
                    "Home Assistant API Documentation"
                ]
            }
        },
        "/find_entity_by_id": {
            "get": {
                "summary": "Find entity by ID",
                "description": "Retrieves a specific entity by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "The ID of the entity to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity found."
                    },
                    "404": {
                        "description": "Entity not found."
                    }
                },
                "tags": [
                    "Home Assistant API Documentation"
                ]
            }
        },
        "/associations": {
            "get": {
                "summary": "List all associations",
                "description": "Retrieves a list of all associations between interactive and target devices.",
                "responses": {
                    "200": {
                        "description": "List of associations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Association"
                            }
                        }
                    }
                },
                "tags": [
                    "Interactive Target Association API Documentation"
                ]
            },
            "post": {
                "summary": "Create an association",
                "description": "Creates a new association between an interactive and a target device.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "association",
                        "description": "Association to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Association"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Association created"
                    }
                },
                "tags": [
                    "Interactive Target Association API Documentation"
                ]
            }
        },
        "/associations/{id}": {
            "get": {
                "summary": "Get an association",
                "description": "Retrieves a specific association by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "ID of the association to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Association details",
                        "schema": {
                            "$ref": "#/definitions/Association"
                        }
                    },
                    "404": {
                        "description": "Association not found"
                    }
                },
                "tags": [
                    "Interactive Target Association API Documentation"
                ]
            }
        }
    },
    "definitions": {
        "BaseObject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "possible_actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "MediaPlayerControlResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "A message indicating the result of the control operation"
                }
            }
        },
        "Signal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                }
            }
        },
        "SignalAction": {
            "type": "object",
            "properties": {
                "interactive_device_id": {
                    "type": "string"
                },
                "interactive_device_action": {
                    "type": "string"
                },
                "target_device_id": {
                    "type": "string"
                },
                "target_action": {
                    "type": "string"
                }
            }
        },
        "InteractiveDevice": {
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "device123"
                },
                "type": {
                    "type": "string",
                    "example": "sensor"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "interactive_action": {
                                "type": "string"
                            },
                            "target_device_id": {
                                "type": "string"
                            },
                            "target_action": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "TargetDevice": {
            "type": "object",
            "properties": {
                "matter_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "possible_actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Association": {
            "type": "object",
            "required": [
                "interactive_device_id",
                "interactive_action",
                "target_device_id"
            ],
            "properties": {
                "interactive_device_id": {
                    "type": "string"
                },
                "interactive_action": {
                    "type": "string"
                },
                "target_device_id": {
                    "type": "string"
                },
                "target_action": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Base API Documentation"
        },
        {
            "name": "Media Player API Documentation"
        },
        {
            "name": "Signals API Documentation"
        },
        {
            "name": "Target Devices API Documentation"
        },
        {
            "name": "Interactive Devices API Documentation"
        },
        {
            "name": "Switch API Documentation"
        },
        {
            "name": "Home Assistant API Documentation"
        },
        {
            "name": "Interactive Target Association API Documentation"
        }
    ],
    "API_URL": "/static/combined_api.json"
}